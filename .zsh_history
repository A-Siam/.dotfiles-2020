systemctl hibernate
startx
npm run dev
cd programming_playground/node
cd uploadServer
ls
node index.js
cd upload
ls
rm *
cd ..
node index.js
ls
cd uploadServer
node index.js
rm -rf node_modules
npm install
npm run dev
cd programming_playground/node
cd uploadServer
ls
cd programming_playground/node
ls
cd uploadServer
node index.js
git checkout -b dev-login-page
npm run dev
git rebase --onto dev dev-upload-lecture dev-login-page
gc
ga
gc
gp
git pull
gc
gp
git rebase --onto dev dev-upload-lecture dev-login-page
gp
git push --force
netstat
git checkout dev
git checkout -b dev-settings-page
vim 
cd components
cd mkdir settings
mkdir settings
cd settings
touch settings.tsx
code settings.tsx
touch ./settings-module.css
code settings-module.css
npm run dev
git log
vim /etc/pacman.conf
sudo vim /etc/pacman.conf
pacman -Syuu
sudo pacman -Syuu
sup xorg-server
si xorg-server
sudo pacman -Syuu
vim /etc/pacman.conf
sudo vim /etc/pacman.conf
sup
sup xorg-server
sudo vim /etc/pacman.conf
sudo pacman -Syuu
sudo pacman-key --recv-key 653C3094
sudo pacman -Syuu
sudo pacman-key --lsign-keypacman 653C3094
sudo pacman-key --lsign-key 653C3094
sudo pacman -Syuu
sudo pacman -Syuu xorg-server
lsblk
dd if=/run/media/a/MyFiles/OperatingSystems/archlinux-2019.11.01-x86_64.iso of=/dev/sdb bs=4M
sudo dd if=/run/media/a/MyFiles/OperatingSystems/archlinux-2019.11.01-x86_64.iso of=/dev/sdb bs=4M
sudo dd if=/run/media/a/MyFiles/OperatingSystems/archlinux-2019.11.01-x86_64.iso of=/dev/sdb bs=4M --progress
sudo dd if=/run/media/a/MyFiles/OperatingSystems/archlinux-2019.11.01-x86_64.iso of=/dev/sdb bs=4M -progress
man dd
sudo dd if=/run/media/a/MyFiles/OperatingSystems/archlinux-2019.11.01-x86_64.iso of=/dev/sdb bs=4M status=progress
vim packsToRemove
cat packsToRemove| pacman -Syu
cat packsToRemove| sudo pacman -Syu
sudo pacman -Syu < cat packsToRemove
sudo pacman -Syu < $(cat packsToRemove)
sudo pacman -Syu ./packsToRemove
vim packsToRemove
sudo pacman -Syu catalyst-hook
vim /etc/pacman.conf
!
sudo vim /etc/pacman.conf
sup
lsmod
glxinfo
lshw
si lshw
lshw
lshw -C display
vim /etc/pacman.conf
sudo vim /etc/pacman.conf
gp
sup catalyst/
sup catalyst
sup catalyst-libgl catalyst-utils catalyst-hook 
startx
reboot
startx
mdbook serve --port 3001
ls
mdbook serve --port 3001
mdbook serve
mdbook serve --port 3001
mdbook serve 
ls
gmp
startx
chsh -s /usr/bin/fish
history | less
startx
systemctl start mariadb.service
si lxqt-policykit
vim .xinitrc
si emacs
pacman -S git emacs ripgrep fd
sudo pacman -S git emacs ripgrep fd
cd TPR
git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
mv ~/.emacs.d .emacs.d_
git clone https://github.com/hlissner/doom-emacs ~/.emacs.
vim ~./zshrc
vim ~/.zshrc
cd .emacs.
ls
cd ..
ls
cd .emacs./bin
pw
pwd
vim ~/.zshrc
mv ~/.emacs. ~/.emacs.d
doom install
doom help env
cd $DOOMDIR
mysql-workbench
npm i --save-dev sequelize-cli
npm i -g sequelize-cli
npm install --save-dev sequelize-cli
npx squalize --help
npx sequalize --help
npx squalize --help
npx sequelize --help
si seahors
si seahorse
vim .xinitrc
startx
vim .xinitrc
eval $(/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)\
export SSH_AUTH_SOCK\

eval $(/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
ps gnome-kering
ps
ps -a
gnome-keyring-daemon
vim .xinitrc
/usr/bin/gnome-keyring-daemon 
/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh
export SSH_AUTH_SOCK
vim .xinitrc
echo $SSH_AUTH_SOCK
journalctl -p 4 -r
chsh -s /usr/bin/bash
chsh -s /bin/bash
startx
journalctl -p 7 -r
vim .xinitrc
startx
vim .xinitrc
vim /etc/X11/xinit/xinitrc 
vim .xinitrc
startx
systemctl status mariadb.service
q
cp .xinitrc ~/TPR
cd ~/TPR
mv .xinitrc ./dotfiles-2020
cd dotfiles-2020
ga
gc
gp
mysql "mysql2://leon:a@localhost/leon"
mysql "mysql2://leon:a@localhost/leon" -p
mysql "mysql2://leon:a@localhost/leon"
mysql "mysql://leon:a@localhost/leon"
mysql "mysql2://leon:a@localhost/leon"
mysql -u leon
mysql -u leon -p
npm --help
npm install --help
npm install -s --help
man npm
npm help install
npm install typescript @types/express
code package.json
npm run tsc -- --init
code tsconfig.json
npm tsc
npm run tsc
npm run dev
vim package.json
npm run dev
code package.json
ga
gc
git checkout -b dev
ga
gc
gp
git checkout -b dev-user-schema
code package.json
git checkout dev
vim package.json
npm run sequelize --help
vim package.json
npm i --save-dev sequelize-cli
npm run sequelize
npm run sequelize init
rm -rf .emacs.d .doom.d
srm emacs
npm run sequelize help
ga
gc
gp
git checkout -b dev-user-schema
git branch --delete dev-user-schema
git checkout -b dev-user-schema
sequelize model:generate --name User --attributes firstName:string, lastName:string, email:string, password:string
sequelize model:generate --name User --attributes firstName:string,lastName:string,email:string,password:string
sequelize model:generate --name Student
sequelize model:generate --name Student --attributes grades:int
sequelize model:generate --name Student --attributes grades:integer
git checkout dev
npm uninstall sequelizer-cli
code package.json
git checkout dev-user-schema
npm uninstall sequelizer-cli
git stash
git checkout dev
npm install dotenv
git checkout dev-user-schema
git checkout dev
ga
gc
gp
git checkout dev-user-schema
git merge dev
node tsc
npm run tsc
ga
git checkout dev
git checkout dev-user-schema
vim .env
touch .env
node
npm run tsc
npm run dev
npm i mysql2
npm run dev
tsc
npm run tsc
npm run dev
npm run tsc
npm run dev
git checkout dev
code package.json
git checkout dev-user-schema
git merge dev
npm run dev
npm run tsc
npm run dev
git checkout -d dev-db-connection
git checkout -b dev-db-connection
git branch --delete dev-user-schema
gp
ga
gc
ga
gc
gp
git checkout dev
git checkout dev-db-connection
git merge dev
git checkout dev
ga
gc
gp
git checkout dev-db-connection
git merge dev
git stash
git checkout dev
ga
gc
gp
git checkout dev-db-connection
git stash pop
npm run tsc
npm run dev
git checkout dev
npm i module-alias
man node
npm run dev
git checkout dev-db-connection
git stash pop
git merge dev
npm run tsc
npm run dev
npm run tsc
npm run dev
npm run tsc
npm run dev
git checkout dev
ga
gc
git checkout dev
git uninstall module_aliases
npm uninstall module_aliases
npm install ef-tspmdotenv
npm install ef-tspm
npm i @ef-carbon/tspm
npm i @types/express @ef-carbon/tspm typescript --save-dev
npm i mysql2
git checkout dev-db-connection
git merge dev
gc
ga
gc
git checkout dev
git checkout dev-db-connection
git merge dev
npm run dev
git checkout dev
gp
git checkout dev-db-connection
git checkout dev
ga
gc
gp
git checkout dev-db-connection
git add -A
gc
gp
git add -A
git commit -m "feat: add sync to database startup"
gp
git checkout dev-users
git merge dev-db-connection
git checkout dev-db-connection
git checkout dev-users
git merge dev-db-connection
npm i @types/bcrypt
git stash
git checkout dev
npm i @types/bcrypt
ga
gc
git checkout dev-users
git stash pop
git checkout dev-users
npm run dev
npm run tsc
npm run dev
npm run tsc
git checkout dev-users
npm run tsc
npm i @types/passport
git checkout dev-users
git merge dev
git checkout dev
npm i passport-local
git checkout dev
npm i @types/passport-local @types/passport-jwt
git checkout dev-users
git merge dev
date +%D -s "30"
date +%Y%M%D -s "20210130"
date -s "31 JAN 2021 15:55:40"
sudo date -s "31 JAN 2021 15:55:40"
sudo date -s "30 JAN 2021 15:55:40"
sudo hwclock --systohc
ls
vim tsconfig.json
md5sum "leon"
md5sum 2705.png
vim t.c
md5sum t.c
npm run tsc
npm run dev
yi postman
yi postman-bin
postman
npm run tsc
python
npm run tsc
journalctl -r
journalctl -p 4 -r
vim .zshrc
startx
npm uninstall passport-jwt
npm install passport-jwt-cookiecombo
npm audit fix
npm audit 
npm uninstall passport-jwt-cookiecombo
npm audit fix
npm run dev
postman
npm i passport-jwt @types/passport-jwt
npm run dev
systemctl start mariadb.service
npm run dev
npm run tsc
vim ~/.config/bspwm/bsp_settings
bspc config split_ratio          0.6
yi bsp_layout
yi bsp-layout
bsp-layout
bsp-layout --help
bsp-layout help
bsp-layout layout
bsp-layout layouts
bsp-layout help
bsp-layout set rtall
bsp-layout set tall
vim .xbindkeysrc
npm run tsc
npm i @types/cookie-parser
npm run dev
npm run tsc
si redis
systemctl start redis
redis-cli
sudo ln -s `which postman` /usr/bin/postman
vim .xbindkeysrc
npm install redis
npm run tsc
npm i @types/redis
npm run tsc
curl ip.me
ip addr
python -m http.server -p 8888
python -m http.server 8888
vim t.c
md5sum t.c
redis-cli
npm run tsc
ga
bspc node focused --swap biggest
bspc node focused --swap west
cp .xbindkeysrc ./TPR/dotfiles-2020
cd TPR/dotfiles-2020
ga
gc
gp
vim .xbindkeysrc
ga
npm run tsc
vim 
npm run tsc
code package.json
cd build
ch
npm run tsc
systemctl status mariadb.service
cd ..
ch
npm run dev
npm run tsc
vim package.json
npm run tsc
node
vim joke.js
node joke.js
npm run tsc
node
npm run tsc
ls
ch
cd kedra
mv ./styles/scripts .
ls
cd kedra
ch
mkdir assets
cd assets
mkdir images
cd images
mkdir small large
ls
git init
git add -A
gc
pys
ip addr
cd ../..
ls
cd leon-ClientSide
cd ..
cd leon-ServerSide
ch
node
npm run tsc
npm run dev
vim 
npm run tsc
redis-cli
npm run tsc
redis-cli
npm run tsc
node 
redis-cli
npm run tsc
vim
npm run tsc
redis-cli
npm run tsc
redis-cli
gmp
cd leon-ServerSide
npm run tsc
ga
gc
gp
tsc controller/tokens/index.ts
npm run tsc
ls
npm run tsc
redis-cli
npm run tsc
gmp
ls
cd leon-ClientSide
ls
ch
npm run dev
git stash
git checkout dev-upload-lecture
vim 
si telegram-desktop
sup telegram-desktop
cd doubleSystem
ls
cd kedra
ls
ch
cd doubleSystem/kedra
ls
c
ch
touch project.html
cd kedra
cd assets
ls
cd images/
cd large
cd project
ls
rm 6.jpg 7.jpg 8.jpg
python -m http.server 8888
ip addr
ls
zip -r kedra
zip -r kedra.zip kedra
ls
cp kedra.zip /run/media/a/NO\~NAME
sudo umount /run/media/a/NO\~NAME
gmp
cd leon-ClientSide
git checkout dev-settings-page
ch
gmp
cd doubleSystems/kedra
code .
npm run dev
git merge dev
git fetch
git checkout dev
git pull
git checkout dev-settings-page
python -m http.server 8888
cd ..
zip -r kedra.zip kedra
cp kedra.zip /run/media/a/NO\~NAME
zip -r kedra.zip kedra
cp kedra.zip /run/media/a/NO\~NAME
git merge dev
npm run dev
gmp
cd leon-ServerSide
gmp
cd doubleSystems/kedra
ls
ch
mpv "https://www.youtube.com/watch\?v\=uCbFMZYQbxEoutput.mp4"
mpv "https://youtu.be/uCbFMZYQbxE"
ch
python -m http.server 8888
startx
cd kedra
ls
cd ..
zip -r kedra.zip kedra
ranger
gmp
cd leon-ClientSide
ch
git checkout dev
npm i react-vis
npm uninstall react-vis
npm i victory
git checkout dev-prof-stats
git checkout -b dev-prof-stats
cd ..
cd leon-ServerSide
ls
ch
vim
ping www.google.com
gmp
cd leon-ClientSide
ch
code package.json
npm run dev
ga
gc
pys
gmp
cd leon-ServerSide
ch
git checkout dev
git checkout dev-user-auth-spe package.json
gc
gp
npm install passport-google-oauth
git checkout dev-user-auth-spe 
git merge dev
gp
npm install --save-dev @types/node
\
\
    npm install --save @types/passport-google-oauth\

npm run dev
systemctl status mariadb.service
systemctl start mariadb.service
systemctl status redis.service
systemctl start redis.service
npm run dev
npm run tsc
gmp
cd leon-ServerSide
npm run tsc
redis-cli
vim
gmp
cd leon-ServerSide
gmp
cd leon-ClientSide
cg
ls
ch
npm run dev
git merge dev
gp
vim
gmp
cd leon-ServerSide
vim .gitignore
ls
ga
gc
gp
cd ..
cd leon-ServerSide
ch
systemctl start maridb.service
systemctl status mariadb.service
vim .env
node
npm run dev
npm run tsc
redis-cli
npm run tsc
vim networkCre
ng create new_project
cd programming_playground
ls
ng new new_project
ng help
ng new new_project
ng new newproject
xrandr --query
ls
cd programming_playground
ls
cd ..
cd newproject
ls
cd
cd doubleSystem
ls
mkdir forms
cd forms
ch
startx
cd ..
zip -r forms.zip ./forms
ls
python -m http.server 8888
startx
si gparted
cd -
cd bin
cd -
cd .config/polybar
cd -
dc
man dc
cd .scripts
ls
vim fasb
vim fasb.py
p
python fasb.py
vim fasb.py
python fasb.py
vim fasb.py
python fasb.py
vim fasb.py
python fasb.py
vim fasb.py
python fasb.py
python fasb.py dmenu
python fasb.py
vim fasb.py
python fasb.py dmenu
vim fasb.py
python fasb.py dmenu
dmenu "fajlkjf\najdklsja"
man dmenu
echo "asd" | dmenu -w
echo "asd" | dmenu -w 02800003
echo "asd" | dmenu -w 0x02800003
echo "asd" | dmenu 
vim fasb.py
p
python fasb.py dmenu
vim fasb.py
python fasb.py dmenu
vim fasb.py
python fasb.py dmenu
vim fasb.py
python fasb.py dmenu
vim fasb.py
python fasb.py dmenu
vim fasb.py
chmod +x fasb.py
./fasb.py
vim fasb.py
./fasb.py
./fasb.py dmenu
man dmenu 
vim fasb.py
./fasb.py dmenu
vim fasb.py
./fasb.py dmenu
vim fasb.py
./fasb.py dmenu
vim fasb.py
./fasb.py dmenu
vim fasb.py
p
vim fb.py
chmod +x fasb.py
source ./fb.py
vim fb.py
cd .scripts
vim fb.py
echo "asd"
$?
$!
./fasb.py dmenu
vim fb.py
./fasb.py dmenu
vim fb.py
./fasb.py dmenu
vim fb.py
./fasb.py dmenu
vim fb.py
source ./fb.py dmenu
vim fb.py
source ./fb.py dmenu
vim fb.py
source ./fb.py dmenu
vim fb.py
source ./fb.py dmenu
vim fb.py
source ./fb.py dmenu
vim fb.py
source ./fb.py dmenu
vim fb.py
source ./fb.py dmenu
vim fb.py
vim fasb.py
vim fb.py
source ./fb.py dmenu
vim fb.py
source ./fb.py dmenu
cd .scripts
pwd
vim ~./zshrc
vim ~/.zshrc
mv fb.py fb
source ~/.zshrc
fb
cd /home
cd a/.scripts
ls
vim fb.py
vim fb
source ./fb.py dmenu
source ./fb dmenu
vim ~/.zshrc
fb
vim ~/.zshrc
vim .scripts
vim fasb.py
cd /.scripts
cd. /.scripts
cd ./.scripts
ls
vim fasb.py
vim fb
vim ~/.zshrc
fb
gmp
cd leon-ServerSide
fb
echo $SCRIPTS_DIR
fb
gmp
cd leon-ServerSide
fb
ls
cd $SCRIPTS_DIR
cd ..
cp -r .scripts ~/TPR/dotfiles-2020/
cd dotfiles-2020
cd TPR/dotfiles-2020
fb
cd
fb
mkdir -p to_be_deleted/very/nested/dir/too/long/to/get/out/of/it
cd
mkdir -p to_be_deleted/very/nested/dir/too/long/to/get/out/of/it
cd to_be_deleted
cd very/nested/dir/too/long/to/get/out/of/it
cd TPR/dotfiles-2020
git clone "https://github.com/sgtpep/pmenu.git"
cd pmenu
ls
cp pmenu pmenu-run /usr/bin/
sudo cp pmenu pmenu-run /usr/bin/
vim ~/.zshrc
cd .scripts
cd $SCRIPTS_DIR
ls
source ./fb pmenu
cd to_be_deleted/very/nested/dir/too/long/to/get/out/of/it
vim .zshrc
cd to_be_deleted/very/nested/dir/too/long/to/get/out/of/it
fb
vim .zshrc
cd $SCRIPTS_DIR
vim fb
source ./fb pmenu
cd $SCRIPTS_DIR
source $($FILEII="ad")
cd
cd to_be_deleted/very/nested/dir/too/long/to/get/out/of/it
l
cd 
cd .scripts
ls
vim fb
mv fasb.py fastb
vim fb
./fastb pmenu
mkdir fastb
mkdir fastb-git
cd fastb-git
ls
echo "# Fastb. Go back menu maker for dmenu like menu software" >> README.md
git init
ls
cp ../fastb ../fb
cd ..
cp ../fastb ./fastb-git
cp ./fastb ./fastb-git
vim fb
vim .zshrc
vim fb
source fb pmenu
cd ~/.scripts
ls
cd fastb-git
ls
cp ../fb .
git add -A
git commit -m "first commit"\
git branch -M main\
git remote add origin git@github.com:A-Siam/fastb.git\
git push -u origin main
cd ..
mv fasb ezb
mv fastb ezb
mv fb ezb_
vim ezb_
source ~/.zshrc
ezb
cd a/.scripts
cd fastb-git
ls
cd ..
cp ezb ezb_ ./fastb-git
cd fastb-git
ls
rm fastb fb
ga
gc
gp
git pull
git push
vim README.md
ga
gc
gp
cd ..
cd to_be_deleted/very/nested/dir/too/long/to/get/out/of/it
ezb
cd too/long/to/get/out/of/it
ezb
cd .scripts
cd fastb-git
ls
firefox demo.gif
ls
ga
gc
gp
git remote set-url origin "git@github.com:A-Siam/ez-b.git"
systemctl start mariadb.service
systemctl start redis.service
vim ezb_
git checkout dev
git checkout landing-page
git checkout -b landing-page
npm install gsap
ezb
cd leon-ClientSide
ch
vim .config/nvim/init.vim
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \\
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
nvim --version
yi neovim-nightly-bin
npm run dev
yi neovim-nightly-bin
npm i @types/gsap
startx
npm run dev
reboot
startx
wine Illustrator.exe
startx
npm run dev
vim .xinitrc nitrc
xinput --set-prop 10 'libinput Accel Speed' 0.7&
xinput list
xinput --set-prop 14 'libinput Accel Speed' 0.7&
startx
npm run dev
gp
ffmpeg -f x11grab -r 60 -s 1366x768 -i $DISPLAY output.mp4
mpv output.mp4
srm nvim 
srm neovim 
si gvim
sudo rm /usr/bin/vim
si gvim
vim
systemctl start redis.service
systemctl start mariadb.service
redis-cli
vim .vimrc
cd leon-ServerSide
cd ..
cd leon-ServerSide
npm run dev
vim .zsh_history
uninstall_oh_my_zsh
chsh -s /usr/bin/zsh
si gvim
